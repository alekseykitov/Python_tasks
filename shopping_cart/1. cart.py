# Написать класс корзины, он должен позволять:
# [ ] Добавлять товары в корзину (один или несколько одного типа)
# [ ] Удалять товары из корзины (по одному типу товаров ИЛИ несколько товаров одного типа)
# [ ] Удалять все товары из корзины
# [ ] Расчитывать общую стоимость товаров в корзине
# [ ] Преобразовывать корзину в "красивую" строку (__str__)
#
# Каждый товар содержит о себе следующую информацию:
# [ ] Название
# [ ] Цена за единицу измерения
# [ ] Название единиц измерения (шт, кг, л и т.д.)

# Пример управляющего кода в интерактивном режиме (он может отличаться):
# >>> apple = Product('Green Apple', price=1.5, units='kg')
# >>> bread = Product('Bread', price=0.5, units='pcs')
# >>> milk = Product('Milk', price=1.0, units='l')
# >>>
# >>> cart = Cart()
# >>> cart.add(apple, quantity=2)    # добавляет 2 кг яблок       2a
# >>> cart.add(milk)                 # добавляет один литр молока 2a 1m
# >>> cart.add(apple)                # добавляет один кг яблок    3a 1m
# >>> cart.remove(apple)             # удаляет все яблоки         1m
# >>> cart.add(milk, quantity=3)     # добавляет 3 литра молока   4m
# >>> cart.remove(milk, quantity=2)  # удаляет 2 литра молока     2m
# >>> cart.add(apple, quantity=10)   # добавляет 10 кг яблок      2m 10a
# >>> print(cart)                    # печатает корзину
# Milk $1 x 2l = $2
# Green Apple $1.5 x 10kg = $15
# Total: x12 = $17
# >>> cart.remove(milk, quantity=10) # удаляет 10 литров молока   10a
# >>> cart.remove(milk)              # удаляет все молоко         10a
# >>> cart.total_price
# 15                                 # у нас 10 кг яблок по $1.5
# >>> cart.clear()                   # очищает корзину
# >>> print(cart)
# Total: x0 = $0

# Мотивация:
# > Базовая работа с классами
#   > Создание классов (синтаксис)
#   > Работа с полями
#   > Работа с методами
# > Базовые дандеры (магические методы)
#   > __init__
#   > __str__
# > Взаимодействие между классами
